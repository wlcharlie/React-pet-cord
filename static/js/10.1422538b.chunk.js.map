{"version":3,"sources":["components/Login/LoginForm.js","components/Login/RegisterForm.js","components/Login/LoginDrawer.js","components/Login/LoginMenu.js","pages/Login.js"],"names":["LoginForm","props","loginData","loginEmail","loginPassword","h","direction","justify","mb","fontSize","fontWeight","id","type","isRequired","ref","my","textAlign","label","onClick","formChangeHandler","_hover","cursor","RegisterForm","regData","regUsername","regEmail","regPassword","regPasswordCheck","style","display","LoginDrawer","dispatch","useDispatch","history","useHistory","useState","form","setForm","error","setError","loading","setLoading","useRef","submitHandler","e","a","preventDefault","email","current","value","password","loginAPI","res","data","user","ok","message","authActions","login","token","idToken","username","registerAPI","replace","isOpen","placement","size","onSubmit","background","flexDirection","status","position","right","top","autoFocus","onBlur","isLoading","loadingText","w","colorScheme","LoginMenu","backgroundPosition","backgroundSize","backgroundRepeat","backgroundImage","Login"],"mappings":"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","file":"static/js/10.1422538b.chunk.js","sourcesContent":["import {\r\n  DrawerBody,\r\n  Input,\r\n  Text,\r\n  FormControl,\r\n  FormLabel,\r\n  Tooltip,\r\n  Divider,\r\n  Flex,\r\n} from '@chakra-ui/react';\r\n\r\nconst LoginForm = props => {\r\n  const { loginEmail, loginPassword } = props.loginData;\r\n  return (\r\n    <DrawerBody>\r\n      <Flex h=\"100%\" direction=\"column\" justify=\"center\">\r\n        <Text mb={3} fontSize={24} fontWeight=\"bolder\">\r\n          LOGIN\r\n        </Text>\r\n        <FormControl id=\"email\" mb={2}>\r\n          <FormLabel>Email address</FormLabel>\r\n          <Input type=\"email\" isRequired ref={loginEmail} />\r\n        </FormControl>\r\n        <FormControl id=\"password\" mb={2}>\r\n          <FormLabel>Password</FormLabel>\r\n          <Input type=\"password\" isRequired ref={loginPassword} />\r\n        </FormControl>\r\n\r\n        <Divider my={3} />\r\n        <Text textAlign=\"right\" mb={2}>\r\n          <Tooltip\r\n            label=\"well, the feature still developing\"\r\n            aria-label=\"A tooltip\"\r\n          >\r\n            Forgot the Password?\r\n          </Tooltip>\r\n        </Text>\r\n        <Text\r\n          onClick={props.formChangeHandler}\r\n          textAlign=\"right\"\r\n          _hover={{ cursor: 'pointer', fontWeight: 'bolder' }}\r\n        >\r\n          Not Registered yet?\r\n        </Text>\r\n      </Flex>\r\n    </DrawerBody>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","import {\r\n  DrawerBody,\r\n  Input,\r\n  Text,\r\n  FormControl,\r\n  FormLabel,\r\n  Divider,\r\n  Flex,\r\n} from '@chakra-ui/react';\r\nimport { MdChevronLeft } from 'react-icons/md';\r\n\r\nconst RegisterForm = props => {\r\n  const { regUsername, regEmail, regPassword, regPasswordCheck } =\r\n    props.regData;\r\n\r\n  return (\r\n    <DrawerBody>\r\n      <Flex h=\"100%\" direction=\"column\" justify=\"center\">\r\n        <Text mb={3} fontSize={24} fontWeight=\"bolder\">\r\n          Reg\r\n        </Text>\r\n        <FormControl id=\"username\" mb={2}>\r\n          <FormLabel>User Name</FormLabel>\r\n          <Input type=\"text\" isRequired ref={regUsername} />\r\n        </FormControl>\r\n        <FormControl id=\"email\" mb={2}>\r\n          <FormLabel>Email address</FormLabel>\r\n          <Input type=\"email\" isRequired ref={regEmail} />\r\n        </FormControl>\r\n        <FormControl id=\"password\" mb={2}>\r\n          <FormLabel>Password</FormLabel>\r\n          <Input type=\"password\" isRequired ref={regPassword} />\r\n        </FormControl>\r\n        <FormControl id=\"checkPassword\" mb={2}>\r\n          <FormLabel>Check the Password</FormLabel>\r\n          <Input type=\"password\" isRequired ref={regPasswordCheck} />\r\n        </FormControl>\r\n\r\n        <Divider my={3} />\r\n        <Text\r\n          onClick={props.formChangeHandler}\r\n          _hover={{ cursor: 'pointer', fontWeight: 'bolder' }}\r\n        >\r\n          <MdChevronLeft style={{ display: 'inline' }} />\r\n          Have Account Already?\r\n        </Text>\r\n      </Flex>\r\n    </DrawerBody>\r\n  );\r\n};\r\n\r\nexport default RegisterForm;\r\n","import { Fragment, useState, useRef } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { authActions } from '../../store/auth';\r\nimport { useHistory } from 'react-router';\r\n\r\nimport {\r\n  Drawer,\r\n  DrawerFooter,\r\n  DrawerHeader,\r\n  DrawerContent,\r\n  Button,\r\n  Alert,\r\n  AlertIcon,\r\n  CloseButton,\r\n} from '@chakra-ui/react';\r\n\r\nimport { registerAPI, loginAPI } from '../../api/auth';\r\n\r\nimport LoginForm from './LoginForm';\r\nimport RegisterForm from './RegisterForm';\r\n\r\nconst LoginDrawer = () => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const [form, setForm] = useState('login');\r\n  const formChangeHandler = () => {\r\n    form === 'login' ? setForm('register') : setForm('login');\r\n  };\r\n\r\n  const [error, setError] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const loginData = { loginEmail: useRef(), loginPassword: useRef() };\r\n  const regData = {\r\n    regUsername: useRef(),\r\n    regEmail: useRef(),\r\n    regPassword: useRef(),\r\n    regPasswordCheck: useRef(),\r\n  };\r\n\r\n  const submitHandler = async e => {\r\n    e.preventDefault();\r\n    setError(null);\r\n    setLoading(true);\r\n\r\n    if (form === 'login') {\r\n      const { loginEmail, loginPassword } = loginData;\r\n      const email = loginEmail.current.value;\r\n      const password = loginPassword.current.value;\r\n      const { res, data, user } = await loginAPI({ email, password });\r\n      if (!res.ok) {\r\n        setError(data.error.message);\r\n        setLoading(false);\r\n        return;\r\n      }\r\n      dispatch(authActions.login({ token: data.idToken, ...user }));\r\n    }\r\n\r\n    if (form === 'register') {\r\n      const { regUsername, regEmail, regPassword, regPasswordCheck } = regData;\r\n      const username = regUsername.current.value;\r\n      const email = regEmail.current.value;\r\n      const password = regPassword.current.value;\r\n      const passwordCheck = regPasswordCheck.current.value;\r\n      if (passwordCheck !== password) {\r\n        setError('Both password fields are not identical');\r\n        setLoading(false);\r\n        return;\r\n      }\r\n\r\n      const { res, data, user } = await registerAPI({\r\n        email,\r\n        password,\r\n        username,\r\n      });\r\n\r\n      if (!res.ok) {\r\n        setError(data.error.message);\r\n        setLoading(false);\r\n        return;\r\n      }\r\n      dispatch(authActions.login({ token: data.idToken, ...user }));\r\n    }\r\n    setLoading(false);\r\n    history.replace('/pets');\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Drawer isOpen={true} placement=\"right\" size=\"md\">\r\n        <form onSubmit={submitHandler}>\r\n          <DrawerContent\r\n            background={['rgba(255,255,255,0.95)', null, null, 'white']}\r\n          >\r\n            <DrawerHeader textAlign=\"center\">PetCord</DrawerHeader>\r\n\r\n            {form === 'login' && (\r\n              <LoginForm\r\n                formChangeHandler={formChangeHandler}\r\n                loginData={loginData}\r\n              />\r\n            )}\r\n            {form === 'register' && (\r\n              <RegisterForm\r\n                formChangeHandler={formChangeHandler}\r\n                regData={regData}\r\n              />\r\n            )}\r\n            <DrawerFooter flexDirection=\"column\" h=\"20%\">\r\n              {error && (\r\n                <Alert status=\"warning\" mb={2}>\r\n                  <AlertIcon />\r\n                  {error}\r\n                  <CloseButton\r\n                    size=\"sm\"\r\n                    position=\"absolute\"\r\n                    right=\"3px\"\r\n                    top=\"3px\"\r\n                    autoFocus\r\n                    onBlur={() => setError(null)}\r\n                    onClick={() => setError(null)}\r\n                  />\r\n                </Alert>\r\n              )}\r\n              <Button\r\n                isLoading={loading}\r\n                loadingText=\"just a sec...\"\r\n                type=\"submit\"\r\n                w=\"100%\"\r\n                colorScheme=\"red\"\r\n              >\r\n                {form === 'login' ? 'LOGIN' : 'JOIN'}\r\n              </Button>\r\n            </DrawerFooter>\r\n          </DrawerContent>\r\n        </form>\r\n      </Drawer>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default LoginDrawer;\r\n","import { Fragment } from 'react';\r\nimport { Box } from '@chakra-ui/react';\r\nimport LoginDrawer from './LoginDrawer';\r\n\r\nconst LoginMenu = () => {\r\n  return (\r\n    <Fragment>\r\n      <LoginDrawer />\r\n      <Box\r\n        w=\"100%\"\r\n        h=\"100%\"\r\n        backgroundPosition={['-200px', null, null, 'left']}\r\n        backgroundSize={['cover', null, null, null, null, 'contain']}\r\n        backgroundRepeat=\"no-repeat\"\r\n        backgroundImage=\"url(https://images.unsplash.com/photo-1623387641168-d9803ddd3f35?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1050&q=80)\"\r\n      ></Box>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default LoginMenu;\r\n","import LoginMenu from '../components/Login/LoginMenu';\r\n\r\nconst Login = () => {\r\n  return <LoginMenu />;\r\n};\r\n\r\nexport default Login;\r\n"],"sourceRoot":""}