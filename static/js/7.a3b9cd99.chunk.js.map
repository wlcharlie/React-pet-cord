{"version":3,"sources":["components/Menu/MenuButton.js","components/Menu/DrawerMenu.js","components/Menu/YourPets.js","components/Menu/User.js","components/Menu/Header.js","components/layouts/PetsContainer.js","utils/convertToAge.js","components/Pets/PetCard.js","api/pets.js","components/Pets/AddPetForm.js","components/Pets/AddPetMenu.js","components/layouts/PetCardLoading.js","pages/Pets.js"],"names":["MenuButton","props","styles","home","size","pets","records","as","NavLink","to","leftIcon","justifyContent","bg","px","mb","_hover","color","activeStyle","backgroundColor","children","DrawerMenu","btnRef","useRef","useDisclosure","isOpen","onOpen","onClose","ref","onClick","placement","finalFocusRef","d","flexDirection","YourPets","Button","rightIcon","ChevronDown","minH","boxSize","borderRadius","src","alt","mr","User","user","useSelector","state","auth","dispatch","useDispatch","mx","bgImage","bgPosition","bgSize","bgColor","_active","ml","fontSize","fontWeight","name","email","justify","colorScheme","variant","authActions","logout","Header","p","boxShadow","align","pos","top","zIndex","h","Pets","maxW","mt","py","gridTemplateColumns","alignItems","gridGap","toAge","timestamp","Date","getTime","toFixed","PetCard","data","gender","dob","species","note","avatar","age","my","w","bottom","left","borderWidth","borderColor","colStart","direction","fontStyle","display","grow","right","db","addPet","a","i","formData","FormData","append","fetch","method","body","res","json","getPets","UserId","initialData","newPetReducer","action","type","value","AddPetForm","id","avatarRef","useState","setAvatar","useReducer","newPetDispatch","addHandler","e","preventDefault","submit","pending","current","files","ok","success","fail","onSubmit","enctype","spacing","onChange","target","accept","length","console","log","URL","createObjectURL","transition","filter","cursor","click","isRequired","placeholder","defaultValue","AddPetMenu","typed","setTyped","loading","setLoading","error","setError","toast","useToast","leaveConfirm","window","confirm","eventHandler","title","description","status","duration","position","isClosable","onTransitionEnd","_focus","transform","isLoading","loadingText","form","LoadingSkeleton","startColor","endColor","PetCardLoading","petReducer","map","_id","petDispatch","useEffect","PetsContainer"],"mappings":"4OA6BeA,EAzBI,SAAAC,GACjB,IAAMC,EAAS,CACbC,KAAM,cAAC,IAAD,CAAQC,KAAM,KACpBC,KAAM,cAAC,IAAD,CAAQD,KAAM,KACpBE,QAAS,cAAC,IAAD,CAAYF,KAAM,MAG7B,OACE,cAAC,IAAD,CACEG,GAAIC,IACJC,GAAE,WAAMR,EAAMC,QACdQ,SAAUR,EAAOD,EAAMC,QACvBE,KAAK,KACLO,eAAe,QACfC,GAAG,cACHC,GAAI,EACJC,GAAI,EACJC,OAAQ,CAAEH,GAAI,UAAWI,MAAO,SAChCC,YAAa,CAAEC,gBAAiB,UAAWF,MAAO,SAVpD,SAYGf,EAAMkB,YC4BEC,EAnCI,SAAAnB,GACjB,IAAMoB,EAASC,mBACf,EAAoCC,cAA5BC,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,OAAQC,EAAxB,EAAwBA,QAExB,OACE,eAAC,WAAD,WACE,cAAC,IAAD,CAAQd,GAAG,cAAce,IAAKN,EAAQO,QAASH,EAA/C,SACE,cAAC,IAAD,CAAQrB,KAAM,OAEhB,eAAC,IAAD,CACEoB,OAAQA,EACRK,UAAU,OACVH,QAASA,EACTI,cAAe7B,EAAMoB,OAJvB,UAME,cAAC,IAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,IACA,cAAC,IAAD,UACE,cAAC,IAAD,wBAGF,eAAC,IAAD,CAAYU,EAAE,OAAOC,cAAc,SAAnC,UACE,cAAC,EAAD,CAAY9B,OAAO,OAAnB,kBACA,cAAC,EAAD,CAAYA,OAAO,OAAnB,kBACA,cAAC,EAAD,CAAYA,OAAO,UAAnB,+BAGF,cAAC,IAAD,+B,2BCCK+B,EApCE,WACf,OACE,eAAC,IAAD,WACE,cAAC,IAAD,CACE1B,GAAI2B,IACJC,UAAW,cAACC,EAAA,EAAD,IACXL,EAAG,CAAC,OAAQ,SAHd,uBAOA,eAAC,IAAD,WACE,eAAC,IAAD,CAAUM,KAAK,OAAf,UACE,cAAC,IAAD,CACEC,QAAQ,OACRC,aAAa,OACbC,IAAI,kCACJC,IAAI,2BACJC,GAAG,SAEL,+DAEF,eAAC,IAAD,CAAUL,KAAK,OAAf,UACE,cAAC,IAAD,CACEC,QAAQ,OACRC,aAAa,OACbC,IAAI,kCACJC,IAAI,oBACJC,GAAG,SAEL,+D,gBCuBKC,EAhDF,WACX,IAAMC,EAAOC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,QAClCC,EAAWC,cAEjB,OACE,eAAC,IAAD,WACE,cAAC,IAAD,CACEC,GAAI,EACJ3C,GAAI2B,IACJK,aAAa,OACbD,QAAQ,OACRa,QAAQ,iEACRC,WAAW,SACXC,OAAO,UACPtC,OAAQ,CAAEuC,QAAS,QACnBC,QAAS,CAAED,QAAS,UAEtB,eAAC,IAAD,WACE,cAAC,IAAD,CAAME,GAAI,EAAGC,SAAU,GAAIC,WAAW,SAAtC,SACGd,EAAKe,OAER,cAAC,IAAD,CAAMH,GAAI,EAAGC,SAAU,GAAIC,WAAW,UAAtC,SACGd,EAAKgB,QAER,cAAC,IAAD,IACA,cAAC,IAAD,UACE,cAAC,IAAD,2BAEF,cAAC,IAAD,IACA,cAAC,IAAD,UACE,cAAC,IAAD,CAAMC,QAAQ,WAAd,SACE,cAAC,IAAD,CACEC,YAAY,MACZC,QAAQ,QACRrB,GAAI,EACJd,QAAS,WACPoB,EAASgB,IAAYC,WALzB,+BCJGC,IAlCA,WACb,OACE,eAAC,IAAD,CACEC,EAAG,EACHC,UAAU,OACVC,MAAM,SACNC,IAAI,SACJC,IAAI,IACJ3D,GAAG,QACH4D,OAAO,WACPC,EAAE,KARJ,UAUE,cAAC,IAAD,UACE,cAAC,EAAD,MAEF,cAAC,IAAD,UACE,eAAC,IAAD,CAAMJ,MAAM,SAAZ,UACE,cAAC,IAAD,CAAQjE,KAAM,KACd,cAAC,IAAD,CAAMoD,GAAI,EAAGC,SAAU,GAAvB,0BAKJ,cAAC,IAAD,IACA,cAAC,IAAD,UACE,eAAC,IAAD,CAAMY,MAAM,SAAZ,UACE,cAAC,EAAD,IACA,cAAC,EAAD,c,oHCfKK,EAjBF,SAAAzE,GACX,OACE,cAAC,IAAD,CACE0E,KAAM,CAAC,eAAgB,KAAM,KAAM,gBACnCC,GAAI,EACJC,GAAI,EACJ9C,EAAG,CAAC,OAAQ,OAAQ,KAAM,QAC1B+C,oBAAqB,CAAC,KAAM,KAAM,KAAM,WACxC9C,cAAe,CAAC,KAAM,SAAU,MAChC+C,WAAW,SACXC,QAAS,EARX,SAUG/E,EAAMkB,Y,wECdA8D,EAAQ,SAAAC,GACnB,UACG,IAAIC,MAAOC,UAAwB,IAAZF,GAAxB,SAEAG,QAAQ,IC6EGC,EArEC,SAAArF,GACd,MAAqDA,EAAMsF,KAAnD5B,EAAR,EAAQA,KAAM6B,EAAd,EAAcA,OAAQC,EAAtB,EAAsBA,IAAKC,EAA3B,EAA2BA,QAASC,EAApC,EAAoCA,KAAMC,EAA1C,EAA0CA,OACpCC,EAAMZ,EAAMQ,GAClB,OACE,eAAC,IAAD,CACE1D,EAAE,OACF+C,oBAAoB,UACpBR,IAAK,CAAC,KAAM,WAAY,KAAM,UAC9BwB,GAAI,CAAC,EAAG,EAAG,KAAM,GACjB3B,EAAG,CAAC,OAAQ,EAAG,KAAM,GACrB4B,EAAG,CAAC,KAAM,MAAO,QAAS,QAC1BtB,EAAG,CAAC,KAAM,QAAS,QAAS,QAC5BlC,aAAa,SACb6B,UAAU,OACVd,QAAQ,QAVV,UAYE,cAAC,IAAD,CACEgB,IAAK,CAAC,KAAM,WAAY,KAAM,UAC9B0B,OAAQ,CAAC,KAAM,OAAQ,MACvBC,KAAM,CAAC,KAAM,QAAS,MACtB9C,QAAO,cAASyC,EAAT,KACPrD,aAAc,CAAC,SAAU,KAAM,KAAM,qBACrC2D,YAAa,CAAC,OAAQ,MAAO,KAAM,GACnCC,YAAa,CAAC,OAAQ,QAAS,KAAM,QACrC7D,QAAS,CAAC,QAAS,SACnBc,WAAW,SACXC,OAAO,UAET,eAAC,IAAD,CAAU+C,SAAU,EAAG9B,IAAI,WAA3B,UACE,eAAC,IAAD,CAAM+B,UAAU,SAAS5B,EAAE,OAA3B,UACE,cAAC,IAAD,CACEhB,SAAS,OACTC,WAAW,UACX4C,UAAU,SACVC,QAAS,CAAC,OAAQ,SAJpB,SAMGZ,IAEH,eAAC,IAAD,CAAMtB,MAAM,WAAWR,QAAQ,gBAA/B,UACE,cAAC,IAAD,CAAMJ,SAAS,OAAf,SAAuBE,IACvB,cAAC,IAAD,CAAMjB,GAAI,EAAV,SAAc8C,EAAS,KAAOK,EAAM,SAEtC,cAAC,IAAD,IACA,eAAC,IAAD,CAAMQ,UAAU,SAASG,KAAM,EAAG3C,QAAQ,SAASe,GAAI,EAAvD,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAKxE,KAAK,KAAK2D,QAAQ,UAAUD,YAAY,SAA7C,oCAIF,eAAC,IAAD,CAAMO,MAAM,SAAZ,UACE,cAAC,IAAD,CAAQP,YAAY,SAASpB,GAAI,EAAGP,UAAW,cAAC,IAAD,IAA/C,oBAGA,cAAC,IAAD,CAAQ2B,YAAY,OAAO3B,UAAW,cAAC,IAAD,IAAtC,2BAON,eAAC,IAAD,CAAKmC,IAAI,WAAW0B,OAAO,IAAIS,MAAM,MAAM1E,EAAG,CAAC,OAAQ,SAAvD,UACe,QAAZ2D,GAAqB,cAAC,IAAD,CAAOtF,KAAM,MAAOY,MAAM,mBACnC,QAAZ0E,GAAqB,cAAC,IAAD,CAAOtF,KAAM,MAAOY,MAAM,6B,uJC1EpD0F,EAAK,qCAEEC,EAAM,uCAAG,WAAMpB,GAAN,qBAAAqB,EAAA,sDAEpB,IAASC,KADHC,EAAW,IAAIC,SACPxB,EACZuB,EAASE,OAAOH,EAAGtB,EAAKsB,IAHN,yBAMAI,MAAMP,EAAK,QAAS,CACpCQ,OAAQ,OACRC,KAAML,IARU,cAMZM,EANY,gBAUCA,EAAIC,OAVL,cAUZ9B,EAVY,yBAWX,CAAE6B,MAAK7B,SAXI,2HAAH,sDAiBN+B,EAAO,uCAAG,WAAMC,GAAN,iBAAAX,EAAA,+EAEDK,MAAMP,EAAK,SAAWa,GAFrB,cAEbH,EAFa,gBAGAA,EAAIC,OAHJ,cAGb9B,EAHa,yBAIZ,CAAE6B,MAAK7B,SAJK,2HAAH,sDCGdiC,EAAc,CAClB7D,KAAM,GACN8B,IAAK,GACLC,QAAS,GACTF,OAAQ,OACRG,KAAM,IAGF8B,EAAgB,SAAC3E,EAAO4E,GAC5B,OAAO,2BAAK5E,GAAZ,kBAAoB4E,EAAOC,KAAO,CAACD,EAAOE,UAwH7BC,EArHI,SAAA5H,GACjB,IAAMsH,EAAS1E,aAAY,SAAAC,GAAK,OAAIA,EAAMC,KAAK+E,MACzCC,EAAYzG,mBAClB,EAA4B0G,mBAC1B,2DADF,mBAAOpC,EAAP,KAAeqC,EAAf,KAGA,EAA+DC,qBAC7DT,EACAD,GAFF,0BAAS7D,EAAT,EAASA,KAAM8B,EAAf,EAAeA,IAAKC,EAApB,EAAoBA,QAASF,EAA7B,EAA6BA,OAAQG,EAArC,EAAqCA,KAAQwC,EAA7C,KAeMC,EAAU,uCAAG,WAAMC,GAAN,iBAAAzB,EAAA,6DACjByB,EAAEC,iBACFrI,EAAMsI,OAAOC,UAFI,SAGW7B,EAAO,CACjCf,OAAQmC,EAAUU,QAAQC,MAAM,GAChC/E,OACA8B,MACAC,UACAF,SACAG,OACA4B,WAVe,gBAGTH,EAHS,EAGTA,IAHS,EAGJ7B,KAST6B,EAAIuB,GACN1I,EAAMsI,OAAOK,UAEb3I,EAAMsI,OAAOM,OAfE,2CAAH,sDAmBhB,OACE,sBAAMC,SAAUV,EAAYN,GAAG,aAAaiB,QAAQ,sBAApD,SACE,eAAC,IAAD,CAAQC,QAAQ,OAAOC,SAzBL,SAAAZ,GACpBF,EAAe,CAAER,KAAMU,EAAEa,OAAOvF,KAAMiE,MAAOS,EAAEa,OAAOtB,SAwBpD,UACE,eAAC,IAAD,CAAaE,GAAG,SAAhB,UACE,cAAC,IAAD,qBACA,cAAC,IAAD,CACEqB,OAAO,UACPxB,KAAK,OACLhE,KAAK,SACL5B,EAAE,OACFkH,SAvCW,SAAAZ,GACdA,EAAEa,OAAOR,MAAMU,SACpBC,QAAQC,IAAIjB,EAAEa,OAAOR,OACrBT,EAAUsB,IAAIC,gBAAgBnB,EAAEa,OAAOR,MAAM,OAqCrC/G,IAAKoG,IAEP,eAAC,IAAD,CAAKhC,EAAE,QAAQtB,EAAE,QAAQH,IAAI,WAA7B,UACE,cAAC,IAAD,CACEA,IAAI,WACJE,OAAO,KACPnB,OAAO,QACPF,QAAO,cAASyC,EAAT,KACPG,EAAE,OACFtB,EAAE,OACFlC,aAAa,MACbkH,WAAW,OACX1I,OAAQ,CACN2I,OAAQ,4BACRC,OAAQ,UACRnF,OAAQ,MAEV5C,QAAS,kBAAMmG,EAAUU,QAAQmB,WAEnC,cAAC,IAAD,CACE5I,MAAM,wBACNwD,OAAO,KACPF,IAAI,WACJC,IAAI,MACJ0B,KAAK,MACLrB,GAAG,QACHpB,GAAG,QAPL,SASE,cAAC,IAAD,CAAUpD,KAAM,aAItB,eAAC,IAAD,CAAa0H,GAAG,OAAO+B,YAAU,EAAjC,UACE,cAAC,IAAD,uBACA,cAAC,IAAD,CAAOlC,KAAK,OAAOhE,KAAK,OAAOiE,MAAOjE,OAExC,eAAC,IAAD,CAAamE,GAAG,UAAU+B,YAAU,EAApC,UACE,cAAC,IAAD,mBACA,eAAC,IAAD,CAAQC,YAAY,gBAAgBnG,KAAK,UAAUiE,MAAOlC,EAA1D,UACE,wBAAQkC,MAAM,MAAd,iBACA,wBAAQA,MAAM,MAAd,uBAGJ,eAAC,IAAD,CAAaE,GAAG,MAAM+B,YAAU,EAAhC,UACE,cAAC,IAAD,4BACA,cAAC,IAAD,CAAOlC,KAAK,OAAOhE,KAAK,MAAMiE,MAAOnC,OAEvC,eAAC,IAAD,CAAaqC,GAAG,SAAS+B,YAAU,EAAnC,UACE,cAAC,IAAD,qBACA,cAAC,IAAD,CAAYE,aAAcvE,EAAQ7B,KAAK,SAAvC,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOiE,MAAM,OAAb,kBACA,cAAC,IAAD,CAAOA,MAAM,SAAb,4BAIN,cAAC,IAAD,IACA,eAAC,IAAD,CAAaE,GAAG,OAAhB,UACE,cAAC,IAAD,mBACA,cAAC,IAAD,CAAUgC,YAAY,aAAanG,KAAK,OAAOiE,MAAOjC,aCZjDqE,EAhHI,WACjB,MAA0BhC,oBAAS,GAAnC,mBAAOiC,EAAP,KAAcC,EAAd,KACA,EAA8BlC,oBAAS,GAAvC,mBAAOmC,EAAP,KAAgBC,EAAhB,KACA,EAA0BpC,oBAAS,GAAnC,mBAAOqC,EAAP,KAAcC,EAAd,KACA,EAAoC/I,cAA5BC,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,OAAQC,EAAxB,EAAwBA,QAClBL,EAASC,mBACTiJ,EAAQC,cAERC,EAAe,WACnB,GAAIR,IACYS,OAAOC,QACnB,yFAEU,OAEdT,GAAS,GACTxI,KAGIkJ,EAAe,CACnBpC,QAAS,WACP4B,GAAW,IAGbxB,QAAS,WACPwB,GAAW,GACXF,GAAS,GACTxI,IACA6I,EAAM,CACJM,MAAO,UACPC,YAAa,wBACbC,OAAQ,UACRC,SAAU,IACVC,SAAU,eACVC,YAAY,KAIhBrC,KAAM,WACJuB,GAAW,GACXE,GAAS,KAIb,OACE,eAAC,WAAD,WACE,cAAC,IAAD,CACE/J,GAAG,SACH+D,IAAI,QACJ0B,OAAO,OACPS,MAAM,OACNrC,UAAU,OACVpD,MAAM,UACNJ,GAAG,QACHsF,YAAY,MACZC,YAAY,QACZ5D,aAAa,MACbkH,WAAW,QACX0B,gBAAiB1J,EACjBV,OAAQ,CAAE4I,OAAQ,WAClByB,OAAQ,CACNC,UAAW,WACX5E,MAAO,UAET9E,IAAKN,EAlBP,SAoBE,cAAC,IAAD,CAAkBjB,KAAM,OAE1B,eAAC,IAAD,CACEoB,OAAQA,EACRK,UAAU,QACVH,QAAS+I,EACT3I,cAAe,kBAAM4I,QACrBtK,KAAK,KACL6I,SAAU,kBAAMiB,GAAS,IAN3B,UAQE,cAAC,IAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,IACA,cAAC,IAAD,mCAEA,cAAC,IAAD,UACE,cAAC,EAAD,CAAY3B,OAAQqC,MAGrBP,GACC,eAAC,IAAD,CAAOU,OAAO,UAAd,UACE,cAAC,IAAD,IADF,+CAMF,eAAC,IAAD,CAAcpK,eAAe,gBAA7B,UACE,cAAC,IAAD,CACE2K,UAAWnB,EACXoB,YAAY,aACZ5D,KAAK,SACL7D,YAAY,OACZ0H,KAAK,aALP,iBASA,cAAC,IAAD,CAAQzH,QAAQ,UAAUnC,QAAS6I,EAAnC,iC,SCvHNgB,EAAkB,WACtB,OACE,eAAC,IAAD,CACE1J,EAAE,OACF+C,oBAAoB,UACpBR,IAAK,CAAC,KAAM,WAAY,KAAM,UAC9BwB,GAAI,CAAC,EAAG,EAAG,KAAM,GACjB3B,EAAG,CAAC,OAAQ,EAAG,KAAM,GACrB4B,EAAG,CAAC,KAAM,MAAO,QAAS,QAC1BtB,EAAG,CAAC,KAAM,QAAS,QAAS,QAP9B,UASE,cAAC,IAAD,CACEiH,WAAW,WACXC,SAAS,aACTrH,IAAK,CAAC,KAAM,WAAY,KAAM,UAC9B0B,OAAQ,CAAC,KAAM,OAAQ,MACvBC,KAAM,CAAC,KAAM,QAAS,MACtB3D,QAAS,CAAC,QAAS,WAErB,cAAC,IAAD,CAAU8D,SAAU,EAAG9B,IAAI,WAA3B,SACE,cAAC,IAAD,CACEoH,WAAW,WACXC,SAAS,aACT5F,EAAE,OACFtB,EAAE,OACF8B,QAAS,CAAC,OAAQ,iBAsBbqF,EAfQ,WACrB,OACE,eAAC,WAAD,WACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,QCnCAC,EAAa,SAAC/I,EAAO4E,GACzB,OAAOA,EAAOnC,KAAKuG,KAAI,SAAAzD,GAAC,OAAI,cAAC,EAAD,CAAqB9C,KAAM8C,GAAbA,EAAE0D,SA0B/BrH,UAvBF,WACX,IAAM6C,EAAS1E,aAAY,SAAAC,GAAK,OAAIA,EAAMC,KAAK+E,MAC/C,EAA4BI,qBAAW2D,EAAY,MAAnD,mBAAOxL,EAAP,KAAa2L,EAAb,KASA,OARAC,oBAAS,sBAAC,gCAAArF,EAAA,sEACoBU,EAAQC,GAD5B,gBACAH,EADA,EACAA,IAAK7B,EADL,EACKA,KACT6B,EAAIuB,KACNpD,EAAKE,IAAMR,EAAMM,EAAKE,KACtBuG,EAAY,CAAEzG,UAJR,2CAMP,IAGD,eAAC,WAAD,WACE,cAACrB,EAAA,EAAD,IACA,eAACgI,EAAD,YACI7L,GAAQ,cAAC,EAAD,IACTA,GAAQA,KAEX,cAAC,EAAD","file":"static/js/7.a3b9cd99.chunk.js","sourcesContent":["import { Button } from '@chakra-ui/react';\r\nimport { MdPets, MdHome, MdFavorite } from 'react-icons/md';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst MenuButton = props => {\r\n  const styles = {\r\n    home: <MdHome size={20} />,\r\n    pets: <MdPets size={20} />,\r\n    records: <MdFavorite size={20} />,\r\n  };\r\n\r\n  return (\r\n    <Button\r\n      as={NavLink}\r\n      to={`/${props.styles}`}\r\n      leftIcon={styles[props.styles]}\r\n      size=\"lg\"\r\n      justifyContent=\"start\"\r\n      bg=\"transparent\"\r\n      px={2}\r\n      mb={2}\r\n      _hover={{ bg: '#fea42a', color: 'white' }}\r\n      activeStyle={{ backgroundColor: '#fea42a', color: 'white' }}\r\n    >\r\n      {props.children}\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default MenuButton;\r\n","import { Fragment, useRef } from 'react';\r\nimport { FiMenu } from 'react-icons/fi';\r\nimport {\r\n  Text,\r\n  Button,\r\n  Drawer,\r\n  DrawerBody,\r\n  DrawerFooter,\r\n  DrawerHeader,\r\n  DrawerOverlay,\r\n  DrawerContent,\r\n  DrawerCloseButton,\r\n  useDisclosure,\r\n} from '@chakra-ui/react';\r\n\r\nimport MenuButton from './MenuButton';\r\n\r\nconst DrawerMenu = props => {\r\n  const btnRef = useRef();\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n\r\n  return (\r\n    <Fragment>\r\n      <Button bg=\"transparent\" ref={btnRef} onClick={onOpen}>\r\n        <FiMenu size={20} />\r\n      </Button>\r\n      <Drawer\r\n        isOpen={isOpen}\r\n        placement=\"left\"\r\n        onClose={onClose}\r\n        finalFocusRef={props.btnRef}\r\n      >\r\n        <DrawerOverlay />\r\n        <DrawerContent>\r\n          <DrawerCloseButton />\r\n          <DrawerHeader>\r\n            <Text>PetCord</Text>\r\n          </DrawerHeader>\r\n\r\n          <DrawerBody d=\"flex\" flexDirection=\"column\">\r\n            <MenuButton styles=\"home\">Home</MenuButton>\r\n            <MenuButton styles=\"pets\">Pets</MenuButton>\r\n            <MenuButton styles=\"records\">Health Records</MenuButton>\r\n          </DrawerBody>\r\n\r\n          <DrawerFooter>Footer</DrawerFooter>\r\n        </DrawerContent>\r\n      </Drawer>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default DrawerMenu;\r\n","import {\r\n  Menu,\r\n  MenuButton,\r\n  MenuList,\r\n  MenuItem,\r\n  Button,\r\n  Image,\r\n} from '@chakra-ui/react';\r\nimport { ChevronDownIcon } from '@chakra-ui/icons';\r\n\r\nconst YourPets = () => {\r\n  return (\r\n    <Menu>\r\n      <MenuButton\r\n        as={Button}\r\n        rightIcon={<ChevronDownIcon />}\r\n        d={['none', 'block']}\r\n      >\r\n        Your Pets\r\n      </MenuButton>\r\n      <MenuList>\r\n        <MenuItem minH=\"48px\">\r\n          <Image\r\n            boxSize=\"2rem\"\r\n            borderRadius=\"full\"\r\n            src=\"https://placekitten.com/100/100\"\r\n            alt=\"Fluffybuns the destroyer\"\r\n            mr=\"12px\"\r\n          />\r\n          <span>Fluffybuns the Destroyer</span>\r\n        </MenuItem>\r\n        <MenuItem minH=\"40px\">\r\n          <Image\r\n            boxSize=\"2rem\"\r\n            borderRadius=\"full\"\r\n            src=\"https://placekitten.com/120/120\"\r\n            alt=\"Simon the pensive\"\r\n            mr=\"12px\"\r\n          />\r\n          <span>Simon the pensive</span>\r\n        </MenuItem>\r\n      </MenuList>\r\n    </Menu>\r\n  );\r\n};\r\n\r\nexport default YourPets;\r\n","import {\r\n  Flex,\r\n  Button,\r\n  Menu,\r\n  MenuButton,\r\n  MenuList,\r\n  MenuItem,\r\n  MenuGroup,\r\n  MenuDivider,\r\n  Text,\r\n} from '@chakra-ui/react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { authActions } from '../../store/auth';\r\n\r\nconst User = () => {\r\n  const user = useSelector(state => state.auth);\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <Menu>\r\n      <MenuButton\r\n        mx={3}\r\n        as={Button}\r\n        borderRadius=\"full\"\r\n        boxSize=\"50px\"\r\n        bgImage=\"url(https://image.flaticon.com/icons/png/512/1596/1596810.png)\"\r\n        bgPosition=\"center\"\r\n        bgSize=\"contain\"\r\n        _hover={{ bgColor: 'none' }}\r\n        _active={{ bgColor: 'none' }}\r\n      />\r\n      <MenuList>\r\n        <Text ml={3} fontSize={20} fontWeight=\"bolder\">\r\n          {user.name}\r\n        </Text>\r\n        <Text ml={3} fontSize={16} fontWeight=\"lighter\">\r\n          {user.email}\r\n        </Text>\r\n        <MenuDivider />\r\n        <MenuGroup>\r\n          <MenuItem>My Account</MenuItem>\r\n        </MenuGroup>\r\n        <MenuDivider />\r\n        <MenuGroup>\r\n          <Flex justify=\"flex-end\">\r\n            <Button\r\n              colorScheme=\"red\"\r\n              variant=\"solid\"\r\n              mr={3}\r\n              onClick={() => {\r\n                dispatch(authActions.logout());\r\n              }}\r\n            >\r\n              Logout\r\n            </Button>\r\n          </Flex>\r\n        </MenuGroup>\r\n      </MenuList>\r\n    </Menu>\r\n  );\r\n};\r\n\r\nexport default User;\r\n","import { Text, Flex, Center, Spacer } from '@chakra-ui/react';\r\nimport { MdPets } from 'react-icons/md';\r\n\r\nimport DrawerMenu from './DrawerMenu';\r\nimport YourPets from './YourPets';\r\nimport User from './User';\r\n\r\nconst Header = () => {\r\n  return (\r\n    <Flex\r\n      p={1}\r\n      boxShadow=\"base\"\r\n      align=\"center\"\r\n      pos=\"sticky\"\r\n      top=\"0\"\r\n      bg=\"white\"\r\n      zIndex=\"dropdown\"\r\n      h=\"7%\"\r\n    >\r\n      <Center>\r\n        <DrawerMenu />\r\n      </Center>\r\n      <Center>\r\n        <Flex align=\"center\">\r\n          <MdPets size={24} />\r\n          <Text ml={1} fontSize={24}>\r\n            PetCord\r\n          </Text>\r\n        </Flex>\r\n      </Center>\r\n      <Spacer />\r\n      <Center>\r\n        <Flex align=\"center\">\r\n          <YourPets />\r\n          <User />\r\n        </Flex>\r\n      </Center>\r\n    </Flex>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import { Container } from '@chakra-ui/react';\r\n\r\nconst Pets = props => {\r\n  return (\r\n    <Container\r\n      maxW={['container.sm', null, null, 'container.xl']}\r\n      mt={3}\r\n      py={2}\r\n      d={['grid', 'flex', null, 'grid']}\r\n      gridTemplateColumns={[null, null, null, '1fr 1fr']}\r\n      flexDirection={[null, 'column', null]}\r\n      alignItems=\"center\"\r\n      gridGap={4}\r\n    >\r\n      {props.children}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Pets;\r\n","export const toAge = timestamp => {\r\n  return +(\r\n    (new Date().getTime() - timestamp * 1000) /\r\n    (1000 * 60 * 60 * 24 * 365)\r\n  ).toFixed(1);\r\n};\r\n","import {\r\n  Box,\r\n  GridItem,\r\n  Text,\r\n  Divider,\r\n  Flex,\r\n  Button,\r\n  Tag,\r\n} from '@chakra-ui/react';\r\nimport { FaCat, FaDog, FaHeart, FaPen } from 'react-icons/fa';\r\nimport { toAge } from '../../utils/convertToAge';\r\n\r\nconst PetCard = props => {\r\n  const { name, gender, dob, species, note, avatar } = props.data;\r\n  const age = toAge(dob);\r\n  return (\r\n    <Box\r\n      d=\"grid\"\r\n      gridTemplateColumns=\"1fr 2fr\"\r\n      pos={[null, 'relative', null, 'static']}\r\n      my={[3, 5, null, 0]}\r\n      p={['none', 1, null, 0]}\r\n      w={[null, '90%', '700px', '100%']}\r\n      h={[null, '150px', '200px', '100%']}\r\n      borderRadius=\"0.5rem\"\r\n      boxShadow=\"base\"\r\n      bgColor=\"white\"\r\n    >\r\n      <Box\r\n        pos={[null, 'absolute', null, 'static']}\r\n        bottom={[null, '20px', null]}\r\n        left={[null, '-20px', null]}\r\n        bgImage={`url(${avatar})`}\r\n        borderRadius={['0.5rem', null, null, '0.5rem 0 0 0.5rem']}\r\n        borderWidth={['none', '5px', null, 0]}\r\n        borderColor={['none', 'white', null, 'none']}\r\n        boxSize={['120px', '150px']}\r\n        bgPosition=\"center\"\r\n        bgSize=\"cover\"\r\n      />\r\n      <GridItem colStart={2} pos=\"relative\">\r\n        <Flex direction=\"column\" h=\"100%\">\r\n          <Text\r\n            fontSize=\"12px\"\r\n            fontWeight=\"lighter\"\r\n            fontStyle=\"italic\"\r\n            display={['none', 'block']}\r\n          >\r\n            {note}\r\n          </Text>\r\n          <Flex align=\"flex-end\" justify=\"space-between\">\r\n            <Text fontSize=\"30px\">{name}</Text>\r\n            <Text mr={3}>{gender + ', ' + age + 'y'}</Text>\r\n          </Flex>\r\n          <Divider />\r\n          <Flex direction=\"column\" grow={2} justify=\"center\" mt={1}>\r\n            <Box>\r\n              <Tag size=\"sm\" variant=\"outline\" colorScheme=\"orange\">\r\n                Latest Record: 09/18\r\n              </Tag>\r\n            </Box>\r\n            <Flex align=\"center\">\r\n              <Button colorScheme=\"orange\" mr={1} rightIcon={<FaHeart />}>\r\n                Record\r\n              </Button>\r\n              <Button colorScheme=\"teal\" rightIcon={<FaPen />}>\r\n                Edit\r\n              </Button>\r\n            </Flex>\r\n          </Flex>\r\n        </Flex>\r\n\r\n        <Box pos=\"absolute\" bottom=\"0\" right=\"5px\" d={['none', 'block']}>\r\n          {species === 'cat' && <FaCat size={'4em'} color=\"rgb(0,0,0,0.2)\" />}\r\n          {species === 'dog' && <FaDog size={'4em'} color=\"rgb(0,0,0,0.2)\" />}\r\n        </Box>\r\n      </GridItem>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default PetCard;\r\n","const db = 'https://pet-cord.herokuapp.com/api';\r\n\r\nexport const addPet = async data => {\r\n  const formData = new FormData();\r\n  for (let i in data) {\r\n    formData.append(i, data[i]);\r\n  }\r\n  try {\r\n    const res = await fetch(db + '/pets', {\r\n      method: 'POST',\r\n      body: formData,\r\n    });\r\n    const data = await res.json();\r\n    return { res, data };\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n\r\nexport const getPets = async UserId => {\r\n  try {\r\n    const res = await fetch(db + '/pets/' + UserId);\r\n    const data = await res.json();\r\n    return { res, data };\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n","import {\r\n  Box,\r\n  Input,\r\n  FormControl,\r\n  FormLabel,\r\n  VStack,\r\n  HStack,\r\n  Radio,\r\n  RadioGroup,\r\n  Select,\r\n  Textarea,\r\n  Image,\r\n  Divider,\r\n  Alert,\r\n  AlertIcon,\r\n} from '@chakra-ui/react';\r\nimport { FaCamera } from 'react-icons/fa';\r\nimport { useState, useRef, useReducer } from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport { addPet } from '../../api/pets';\r\n\r\nconst initialData = {\r\n  name: '',\r\n  dob: '',\r\n  species: '',\r\n  gender: 'male',\r\n  note: '',\r\n};\r\n\r\nconst newPetReducer = (state, action) => {\r\n  return { ...state, [action.type]: [action.value] };\r\n};\r\n\r\nconst AddPetForm = props => {\r\n  const UserId = useSelector(state => state.auth.id);\r\n  const avatarRef = useRef();\r\n  const [avatar, setAvatar] = useState(\r\n    'https://image.flaticon.com/icons/png/512/528/528101.png'\r\n  );\r\n  const [{ name, dob, species, gender, note }, newPetDispatch] = useReducer(\r\n    newPetReducer,\r\n    initialData\r\n  );\r\n\r\n  const imagePreview = e => {\r\n    if (!e.target.files.length) return;\r\n    console.log(e.target.files);\r\n    setAvatar(URL.createObjectURL(e.target.files[0]));\r\n  };\r\n\r\n  const changeHandler = e => {\r\n    newPetDispatch({ type: e.target.name, value: e.target.value });\r\n  };\r\n\r\n  const addHandler = async e => {\r\n    e.preventDefault();\r\n    props.submit.pending();\r\n    const { res, data } = await addPet({\r\n      avatar: avatarRef.current.files[0],\r\n      name,\r\n      dob,\r\n      species,\r\n      gender,\r\n      note,\r\n      UserId,\r\n    });\r\n    if (res.ok) {\r\n      props.submit.success();\r\n    } else {\r\n      props.submit.fail();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={addHandler} id=\"newPetForm\" enctype=\"multipart/form-data\">\r\n      <VStack spacing=\"24px\" onChange={changeHandler}>\r\n        <FormControl id=\"avatar\">\r\n          <FormLabel>Avatar</FormLabel>\r\n          <Input\r\n            accept=\"image/*\"\r\n            type=\"file\"\r\n            name=\"avatar\"\r\n            d=\"none\"\r\n            onChange={imagePreview}\r\n            ref={avatarRef}\r\n          />\r\n          <Box w=\"100px\" h=\"100px\" pos=\"relative\">\r\n            <Image\r\n              pos=\"absolute\"\r\n              zIndex=\"99\"\r\n              bgSize=\"cover\"\r\n              bgImage={`url(${avatar})`}\r\n              w=\"100%\"\r\n              h=\"100%\"\r\n              borderRadius=\"50%\"\r\n              transition=\"0.2s\"\r\n              _hover={{\r\n                filter: 'blur(2px) brightness(50%)',\r\n                cursor: 'pointer',\r\n                zIndex: '97',\r\n              }}\r\n              onClick={() => avatarRef.current.click()}\r\n            />\r\n            <Box\r\n              color=\"rgba(255,255,255,0.6)\"\r\n              zIndex=\"98\"\r\n              pos=\"absolute\"\r\n              top=\"50%\"\r\n              left=\"50%\"\r\n              mt=\"-10px\"\r\n              ml=\"-10px\"\r\n            >\r\n              <FaCamera size={20} />\r\n            </Box>\r\n          </Box>\r\n        </FormControl>\r\n        <FormControl id=\"name\" isRequired>\r\n          <FormLabel>Pet Name</FormLabel>\r\n          <Input type=\"text\" name=\"name\" value={name} />\r\n        </FormControl>\r\n        <FormControl id=\"species\" isRequired>\r\n          <FormLabel>Type</FormLabel>\r\n          <Select placeholder=\"Select option\" name=\"species\" value={species}>\r\n            <option value=\"dog\">Dog</option>\r\n            <option value=\"cat\">Cat</option>\r\n          </Select>\r\n        </FormControl>\r\n        <FormControl id=\"dob\" isRequired>\r\n          <FormLabel>Date of birth</FormLabel>\r\n          <Input type=\"date\" name=\"dob\" value={dob} />\r\n        </FormControl>\r\n        <FormControl id=\"gender\" isRequired>\r\n          <FormLabel>Gender</FormLabel>\r\n          <RadioGroup defaultValue={gender} name=\"gender\">\r\n            <HStack>\r\n              <Radio value=\"male\">Male</Radio>\r\n              <Radio value=\"female\">Female</Radio>\r\n            </HStack>\r\n          </RadioGroup>\r\n        </FormControl>\r\n        <Divider />\r\n        <FormControl id=\"note\">\r\n          <FormLabel>Note</FormLabel>\r\n          <Textarea placeholder=\"Some note?\" name=\"note\" value={note} />\r\n        </FormControl>\r\n      </VStack>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default AddPetForm;\r\n","import {\r\n  Box,\r\n  Drawer,\r\n  DrawerBody,\r\n  DrawerFooter,\r\n  DrawerHeader,\r\n  DrawerOverlay,\r\n  DrawerContent,\r\n  DrawerCloseButton,\r\n  Button,\r\n  useDisclosure,\r\n  Alert,\r\n  AlertIcon,\r\n  useToast,\r\n} from '@chakra-ui/react';\r\nimport { Fragment, useRef, useState } from 'react';\r\nimport { BsPlusCircleFill } from 'react-icons/bs';\r\n\r\nimport AddPetForm from './AddPetForm';\r\n\r\nconst AddPetMenu = () => {\r\n  const [typed, setTyped] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(false);\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n  const btnRef = useRef();\r\n  const toast = useToast();\r\n\r\n  const leaveConfirm = () => {\r\n    if (typed) {\r\n      const check = window.confirm(\r\n        'Your data still up there, you will lose it after the leaving. Are you sure and leave?'\r\n      );\r\n      if (!check) return;\r\n    }\r\n    setTyped(false);\r\n    onClose();\r\n  };\r\n\r\n  const eventHandler = {\r\n    pending: () => {\r\n      setLoading(true);\r\n    },\r\n\r\n    success: () => {\r\n      setLoading(false);\r\n      setTyped(false);\r\n      onClose();\r\n      toast({\r\n        title: 'Success',\r\n        description: 'A new pet has joined!',\r\n        status: 'success',\r\n        duration: 6000,\r\n        position: 'bottom-right',\r\n        isClosable: true,\r\n      });\r\n    },\r\n\r\n    fail: () => {\r\n      setLoading(false);\r\n      setError(true);\r\n    },\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Box\r\n        as=\"button\"\r\n        pos=\"fixed\"\r\n        bottom=\"50px\"\r\n        right=\"50px\"\r\n        boxShadow=\"base\"\r\n        color=\"#3182ce\"\r\n        bg=\"white\"\r\n        borderWidth=\"5px\"\r\n        borderColor=\"white\"\r\n        borderRadius=\"50%\"\r\n        transition=\"0.3s \"\r\n        onTransitionEnd={onOpen}\r\n        _hover={{ cursor: 'pointer' }}\r\n        _focus={{\r\n          transform: 'scale(0)',\r\n          right: '-100px',\r\n        }}\r\n        ref={btnRef}\r\n      >\r\n        <BsPlusCircleFill size={60} />\r\n      </Box>\r\n      <Drawer\r\n        isOpen={isOpen}\r\n        placement=\"right\"\r\n        onClose={leaveConfirm}\r\n        finalFocusRef={() => window}\r\n        size=\"sm\"\r\n        onChange={() => setTyped(true)}\r\n      >\r\n        <DrawerOverlay />\r\n        <DrawerContent>\r\n          <DrawerCloseButton />\r\n          <DrawerHeader>Adding a new friend?</DrawerHeader>\r\n\r\n          <DrawerBody>\r\n            <AddPetForm submit={eventHandler} />\r\n          </DrawerBody>\r\n\r\n          {error && (\r\n            <Alert status=\"warning\">\r\n              <AlertIcon />\r\n              Something gone wrong... Please try again!\r\n            </Alert>\r\n          )}\r\n\r\n          <DrawerFooter justifyContent=\"space-between\">\r\n            <Button\r\n              isLoading={loading}\r\n              loadingText=\"working...\"\r\n              type=\"submit\"\r\n              colorScheme=\"blue\"\r\n              form=\"newPetForm\"\r\n            >\r\n              Add\r\n            </Button>\r\n            <Button variant=\"outline\" onClick={leaveConfirm}>\r\n              Cancel\r\n            </Button>\r\n          </DrawerFooter>\r\n        </DrawerContent>\r\n      </Drawer>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default AddPetMenu;\r\n","import { Box, Skeleton, GridItem, VStack } from '@chakra-ui/react';\r\nimport { Fragment } from 'react';\r\n\r\nconst LoadingSkeleton = () => {\r\n  return (\r\n    <Box\r\n      d=\"grid\"\r\n      gridTemplateColumns=\"1fr 2fr\"\r\n      pos={[null, 'relative', null, 'static']}\r\n      my={[3, 5, null, 0]}\r\n      p={['none', 1, null, 0]}\r\n      w={[null, '90%', '700px', '100%']}\r\n      h={[null, '150px', '200px', '100%']}\r\n    >\r\n      <Skeleton\r\n        startColor=\"pink.500\"\r\n        endColor=\"orange.500\"\r\n        pos={[null, 'absolute', null, 'static']}\r\n        bottom={[null, '20px', null]}\r\n        left={[null, '-20px', null]}\r\n        boxSize={['120px', '150px']}\r\n      />\r\n      <GridItem colStart={2} pos=\"relative\">\r\n        <Skeleton\r\n          startColor=\"pink.500\"\r\n          endColor=\"orange.500\"\r\n          w=\"100%\"\r\n          h=\"100%\"\r\n          display={['none', 'block']}\r\n        />\r\n      </GridItem>\r\n    </Box>\r\n  );\r\n};\r\n\r\nconst PetCardLoading = () => {\r\n  return (\r\n    <Fragment>\r\n      <LoadingSkeleton />\r\n      <LoadingSkeleton />\r\n      <LoadingSkeleton />\r\n      <LoadingSkeleton />\r\n      <LoadingSkeleton />\r\n      <LoadingSkeleton />\r\n      <LoadingSkeleton />\r\n      <LoadingSkeleton />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default PetCardLoading;\r\n","import { Fragment, useEffect, useReducer } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport Header from '../components/Menu/Header';\r\nimport PetsContainer from '../components/layouts/PetsContainer';\r\nimport PetCard from '../components/Pets/PetCard';\r\nimport AddPetMenu from '../components/Pets/AddPetMenu';\r\nimport { toAge } from '../utils/convertToAge';\r\nimport { getPets } from '../api/pets';\r\nimport PetCardLoading from '../components/layouts/PetCardLoading';\r\n\r\nconst petReducer = (state, action) => {\r\n  return action.data.map(e => <PetCard key={e._id} data={e} />);\r\n};\r\n\r\nconst Pets = () => {\r\n  const UserId = useSelector(state => state.auth.id);\r\n  const [pets, petDispatch] = useReducer(petReducer, null);\r\n  useEffect(async () => {\r\n    const { res, data } = await getPets(UserId);\r\n    if (res.ok) {\r\n      data.dob = toAge(data.dob);\r\n      petDispatch({ data });\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <Fragment>\r\n      <Header />\r\n      <PetsContainer>\r\n        {!pets && <PetCardLoading />}\r\n        {pets && pets}\r\n      </PetsContainer>\r\n      <AddPetMenu />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Pets;\r\n"],"sourceRoot":""}